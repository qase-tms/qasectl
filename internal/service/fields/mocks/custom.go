// Code generated by MockGen. DO NOT EDIT.
// Source: custom.go
//
// Generated by this command:
//
//	mockgen -source=custom.go -destination=/Users/gda/Documents/github/qase-tms/qasectl/internal/service/fields/mocks/custom.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	custom "github.com/qase-tms/qasectl/internal/models/fields/custom"
	gomock "go.uber.org/mock/gomock"
)

// Mockclient is a mock of client interface.
type Mockclient struct {
	ctrl     *gomock.Controller
	recorder *MockclientMockRecorder
}

// MockclientMockRecorder is the mock recorder for Mockclient.
type MockclientMockRecorder struct {
	mock *Mockclient
}

// NewMockclient creates a new mock instance.
func NewMockclient(ctrl *gomock.Controller) *Mockclient {
	mock := &Mockclient{ctrl: ctrl}
	mock.recorder = &MockclientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockclient) EXPECT() *MockclientMockRecorder {
	return m.recorder
}

// GetCustomFields mocks base method.
func (m *Mockclient) GetCustomFields(ctx context.Context) ([]custom.CustomField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomFields", ctx)
	ret0, _ := ret[0].([]custom.CustomField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomFields indicates an expected call of GetCustomFields.
func (mr *MockclientMockRecorder) GetCustomFields(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomFields", reflect.TypeOf((*Mockclient)(nil).GetCustomFields), ctx)
}

// RemoveCustomFieldByID mocks base method.
func (m *Mockclient) RemoveCustomFieldByID(ctx context.Context, fieldID int32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveCustomFieldByID", ctx, fieldID)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveCustomFieldByID indicates an expected call of RemoveCustomFieldByID.
func (mr *MockclientMockRecorder) RemoveCustomFieldByID(ctx, fieldID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveCustomFieldByID", reflect.TypeOf((*Mockclient)(nil).RemoveCustomFieldByID), ctx, fieldID)
}
